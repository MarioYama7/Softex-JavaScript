*****************JAVASCRIPT*********************

Sua principal é permitir implementar itens mais complexos em um site, mais voltado quando há uma interação. A linguagem é de código aberto.

Utilizado no Front e Back-end. O F é na própria máquina e o Back é no Servidor.

O Node.js faz parte do JAVAs mas dentro do servidor. O electronJS é utilizado no Desktop.

É padronizada, bem atualizada e com uma fort comunidade. 

________________________________________________

*Definição e tipos de dados:

Dados são valores/caracteristicas que atribuimos a algo, no JS os dados das variáveis são mais fáceis de atribuir.


*Tipos de dados: Boolean (V ou F), Undefined(Sem definição), Null (Valor Nulo), Number (Números), String(Dados de texto), Symbol(Função que armazena valor único, chave de objeto ou objetos anônimos.)

________________________________________________

*Variáveis e tipagem em JavaScript.

Var.: Espaço alocado na memória para guardar o dado, não podendo armezenar mais de um dado ao mesmo tempo. Começando com letras minusculas e não é tipada, ou seja, não precisa dizer que tipo é a variável.

Ex: var nome = "Mário"

________________________________________________

*ECMAScript.

É uma associação de padronização de sistemas de informação. Sua finalidade é padronizar e uniformizar os códigos para que seja possível rodar em qualquer navegador.

Em resumo, é como se o ECMAScript fosse a receita de um bolo e o JavaScript fosse o bolo de verdade, em sua forma mais pura e fiel à receita original. ActionScript, UnityScript e JScript seriam os “outros sabores”.

________________________________________________

*Operadores: Lógicos, de igualdade e relacionais.

Lógicos: e/ou/não

Relacionais: ==, !=, <, >, <=, >=.

Igualdade: === ou !==
Estritamente, o símbolo “===” significa igualdade, ou seja, ele deve ser totalmente igual em caso de objetos, não só em quantidade, mas em tamanho e informações.

Temos, também, o “!==” que significa completamente diferente.


________________________________________________

*Operadores de Atribuição:

+=, -=, /=, *= e %=, podem ser feitos em incremento ou decremento.

________________________________________________

*JSON:

É uma notação de objetos no JS, um formato simples de troca entre informações num sistema. É como uma ponte de ligação entre os sistemas, ex: se eu uso um sistema que precise do maps do google ou de um CEP. Para criar uma JSON, algumas regras devem ser seguidas: ela não pode ter funções nem comentários; as propriedades de textos sempre tem aspas duplas.

________________________________________________

*Frameworks para JS:

Uma ferramente que auxilia no desenvolvimento de um projeot, como se fosse um biblioteca de partes de códigos.


________________________________________________

*Functions em JAVASCRIPT:

Conjunto de instruções que executam uma tarefa, necessária quando um mesmo procedimento se repete.

Dentro do JS existe uma forma que é o CALLBACK, um tipo de função que só é executada após o término de uma outra, pois, no JS as funções naturalmente são executadas ao mesmo tempo, independente de ordem.


________________________________________________

*Arrow Functions:

O seu intuito é permitir a diminuição de uma função.


________________________________________________


*Métodos http:

Comunicação entre o Front e o Back. Métodos mais utilizados são: GET, POST, PUT e DELETE.

Pode precisar de algumas bibliotecas como a express.

- Instalar J-SON, depois colocar no CMD j-son server --watch dn.json 





